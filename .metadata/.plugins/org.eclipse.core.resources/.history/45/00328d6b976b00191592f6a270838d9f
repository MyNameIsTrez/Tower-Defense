package data;

public class TileGrid {

	public Tile[][] map;
	private int tilesWide, tilesHigh;

	public TileGrid() {
		map = new Tile[20][15];
		for (int i = 0; i < map.length; i++)
			for (int j = 0; j < map[i].length; j++)
				map[i][j] = new Tile(i * Game.TILE_SIZE, j * Game.TILE_SIZE, Game.TILE_SIZE, Game.TILE_SIZE, TileType.Grass);
	}

	public TileGrid(int[][] newMap) {
		this.tilesWide = newMap[0].length;
		this.tilesHigh = newMap.length;
		map = new Tile[tilesWide][tilesHigh];
		for (int i = 0; i < map.length; i++)
			for (int j = 0; j < map[i].length; j++)
				switch (newMap[j][i]) { // swap the x-axis and y-axis
				case 0:
					map[i][j] = new Tile(i * Game.TILE_SIZE, j * Game.TILE_SIZE, Game.TILE_SIZE, Game.TILE_SIZE,
							TileType.Grass);
					break;
				case 1:
					map[i][j] = new Tile(i * Game.TILE_SIZE, j * Game.TILE_SIZE, Game.TILE_SIZE, Game.TILE_SIZE,
							TileType.Dirt);
					break;
				case 2:
					map[i][j] = new Tile(i * Game.TILE_SIZE, j * Game.TILE_SIZE, Game.TILE_SIZE, Game.TILE_SIZE,
							TileType.Water);
					break;
				}
	}

	public void setTile(int xCoord, int yCoord, TileType type) {
		map[xCoord][yCoord] = new Tile(xCoord * Game.TILE_SIZE, yCoord * Game.TILE_SIZE, Game.TILE_SIZE, Game.TILE_SIZE,
				type);
	}

	public Tile getTile(int xTile, int yTile) {
		if (xTile >= 0 && yTile >= 0 && xTile < tilesWide && yTile < tilesHigh)
			return map[xTile][yTile];
		else
			return new Tile(0, 0, 0, 0, TileType.NULL);
	}

	public void draw() {
		for (Tile[] row : map)
			for (Tile tile : row)
				tile.draw();
	}

	public int getTilesWide() {
		return tilesWide;
	}

	public void setTilesWide(int tilesWide) {
		this.tilesWide = tilesWide;
	}

	public int getTilesHigh() {
		return tilesHigh;
	}

	public void setTilesHigh(int tilesHigh) {
		this.tilesHigh = tilesHigh;
	}
}
