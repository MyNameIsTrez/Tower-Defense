package data;

import static helpers.Artist.TILE_SIZE;
import static helpers.Artist.checkCollision;
import static helpers.Artist.drawQuadTex;
import static helpers.Clock.delta;

import org.newdawn.slick.opengl.Texture;

public class Projectile implements Entity {

	private Texture texture;
	private float x, y, width, height, speed, xVelocity, yVelocity;
	private int damage;
	private Enemy target;
	private boolean alive;

	public Projectile(Texture texture, Enemy target, float x, float y, float width, float height, float speed,
			int damage) {
		this.texture = texture;
		this.target = target;
		this.x = x;
		this.y = y;
		this.width = width;
		this.height = height;
		this.speed = speed;
		this.damage = damage;
		this.alive = true;

//		test what happens when '0f' is '0'
		this.xVelocity = 0f;
		this.yVelocity = 0f;

		calculateDirection();
	}

	private void calculateDirection() {
		// this can definitely be refactored to make more sense
		float totalAllowedMovement = 1.0f; // xdir + ydir = 1
		float xDistanceFromTarget = Math.abs(target.getX() + TILE_SIZE / 4 - x);
		float yDistanceFromTarget = Math.abs(target.getY() + TILE_SIZE / 4 - y);
		float totalDistanceFromTarget = xDistanceFromTarget + yDistanceFromTarget;
		float xPercentOfMovement = xDistanceFromTarget / totalDistanceFromTarget;
		xVelocity = xPercentOfMovement;
		yVelocity = totalAllowedMovement - xPercentOfMovement;

		if (target.getX() < x)
			xVelocity *= -1;
		if (target.getY() < y)
			yVelocity *= -1;
	}

	public void update() {
		if (alive) {
			x += xVelocity * speed * delta();
			y += yVelocity * speed * delta();
			if (checkCollision(x, y, width, height, target.getX(), target.getY(), target.getWidth(),
					target.getHeight())) {
				target.damage(damage);
				alive = false;
			}
			draw();
		}
	}

	public void draw() {
		drawQuadTex(texture, x, y, TILE_SIZE / 2, TILE_SIZE / 2);
	}

	@Override
	public float getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public float getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setX(float x) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setY(float y) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setWidth(int width) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setHeight(int height) {
		// TODO Auto-generated method stub
		
	}

}
